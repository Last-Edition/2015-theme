/* Mixins */

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model;
     -moz-box-sizing: $box-model;
          box-sizing: $box-model;
}

@mixin text-size-adjust($size) {
	-webkit-text-size-adjust: $size;
	-ms-text-size-adjust: $size;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius; 
  -moz-border-radius: $radius; 
  border-radius: $radius; 
}

@mixin clear() {

	float: left;
	width: 100%;

}

@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}  
};


@mixin button( $align: center, $bg: $primaryColour, $radius: 3px ) {

	height: 36px;
	line-height: 36px;
	padding: 0 15px;
	background: $bg;
	text-align: $align;
	color: #fff;
	font-size: 1.4em;
	font-weight: 900;
	text-transform: uppercase;
	display: inline-block;
	cursor: pointer;
	@include border-radius( $radius );
	transition: all ease-in-out 0.2s;

	&:hover {

		background: darken($bg, 10%);
		color: #fff;

	}

	&:visited {

		color: #fff;

	}

}

@mixin input() {

	width: 100%;
	margin: 5px 0 0 0;
	padding: 7.5px;
	background: #f4f4f4;
	border-radius: 3px;
	border: 1px solid #EDEDED;
	font-weight: 600;

	&.wpcf7-not-valid {

		border: 1px solid #EC9B9B;

	}

}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin gradient( $topcolour, $botcolour, $start: 0%, $stop: 100% ) {
	background: $topcolour;
	background: -moz-linear-gradient(top, $topcolour $start, $botcolour $stop);
	background: -webkit-gradient(linear, left top, left bottom, color-stop($start,$topcolour), color-stop($stop,$botcolour));
	background: -webkit-linear-gradient(top, $topcolour $start,$botcolour $stop);
	background: -o-linear-gradient(top, $topcolour $start,$botcolour $stop);
	background: -ms-linear-gradient(top, $topcolour $start,$botcolour $stop);
	background: linear-gradient(to bottom, $topcolour $start,$botcolour $stop);
	filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=0, startColorstr='#{$topcolour}', endColorstr='#{$botcolour}');
	-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$topcolour}', endColorstr='#{$botcolour}')";
}

@mixin absolute-position( $top: false, $right: false, $bottom: false, $left: false ) {
	@if $top {
		top: $top;
	}
	@if $right {
		right: $right;
	}
	@if $bottom {
		bottom: $bottom;
	}
	@if $left {
		left: $left;
	}
	position: absolute;
}

@mixin bp($breakpoint) {
    @media only screen and (min-width: $breakpoint + px ) { 
    	@content; 
    }
}